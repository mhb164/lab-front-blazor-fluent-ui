@using System.Security.Claims

@if (_serverAccessible)
{
    <FluentButton id="UserMenu" Appearance="Appearance.Lightweight" OnClick="OnUserMenuClick" Title="@_userMenuTitle">
        <FluentIcon Value="@(new Icons.Regular.Size24.Person())" Color="Color.Accent" Title="@_userMenuTitle" />
    </FluentButton>

    <FluentMenu Anchor="UserMenu" @bind-Open="_userMenuVisible">
        <FluentLabel Class="unselectable" Weight="FontWeight.Bold" Color="Color.Accent" Typo="Typography.Subject" Alignment=" HorizontalAlignment.Center">
            @_userMenuTitle
        </FluentLabel>
        <FluentDivider />
        <FluentMenuItem OnClick="OnSwitchThemeClickAsync">
            <span slot="start"><FluentIcon Value="@(new Icons.Regular.Size20.DarkTheme())" Color="Color.Accent" Slot="start" /></span>
            Switch to
            @if (Mode == DesignThemeModes.Dark)
            {
                <span>Light</span>
            }
            else
            {
                <span>Dark</span>
            }
        </FluentMenuItem>
        <FluentMenuItem Label="Color" KeepOpen="true">
            <MenuItems>
                @foreach (var item in AllOfficeColors)
                {
                    <FluentMenuItem OnClick="@(()=>OfficeColor = item)">
                        <span slot="start">
                            <FluentIcon Value="@(new Icons.Regular.Size20.Color())" Color="Color.Custom" CustomColor="@GetCustomColor(@item)" Slot="start" />
                        </span>
                        @item
                    </FluentMenuItem>
                }
            </MenuItems>
        </FluentMenuItem>

        <FluentDivider />
        <AuthorizeView>
            <Authorized>
                <FluentMenuItem OnClick="OnChangeLocalPasswordAsync">
                    <span slot="start"><FluentIcon Value="@(new Icons.Regular.Size20.PersonPasskey())" Color="Color.Accent" Slot="start" /></span>
                    Change Local Password
                </FluentMenuItem>
                <FluentMenuItem OnClick="OnSignOutAsync">
                    <span slot="start"><FluentIcon Value="@(new Icons.Regular.Size20.SignOut())" Color="Color.Warning" Slot="start" /></span>
                    Sign Out
                </FluentMenuItem>
            </Authorized>
            <NotAuthorized>
                <FluentMenuItem OnClick="OnSignInClickAsync">
                    <span slot="start"><FluentIcon Value="@(new Icons.Regular.Size24.ArrowForwardDownPerson())" Color="Color.Accent" Slot="start" /></span>
                    Sign In
                </FluentMenuItem>
            </NotAuthorized>
        </AuthorizeView>
    </FluentMenu>
}
<FluentDesignTheme @bind-Mode="@Mode"
                   @bind-OfficeColor="@OfficeColor"
                   StorageName="theme" />
