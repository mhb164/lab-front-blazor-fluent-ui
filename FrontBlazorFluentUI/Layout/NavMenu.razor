@inject NavigationManager Navigation

@if (_serverAccessible)
{
    <FluentButton id="NavMenu" Appearance="Appearance.Lightweight" OnClick="OnNavMenuClickAsync" Title="@_navMenuTitle">
        <FluentIcon Value="@(new Icons.Regular.Size24.Navigation())" Color="Color.Accent" Title="@_navMenuTitle" />
    </FluentButton>

    @if (ShowNavMenu)
    {
        <div class="sidebar-backdrop" @onmousedown="OnCloseAsync"></div>

        <div class="sidebar">
            <div class="sidebar-header">
                <FluentStack>
                    <FluentButton Appearance="Appearance.Lightweight" OnClick="OnCloseAsync">
                        <FluentIcon Value="@(new Icons.Regular.Size24.ArrowCircleLeft())" Color="Color.Accent" />
                    </FluentButton>
                    <FluentLabel Typo="Typography.H3" Color="@Color.Accent" Alignment="HorizontalAlignment.Center">
                        Labb Front
                    </FluentLabel>
                </FluentStack>
            </div>
            <div class="scrollable-menu">
                <FluentNavMenu>
                    <FluentNavLink Href="/" OnClick="OnCloseAsync" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.History())" IconColor="Color.Accent">Dashboard</FluentNavLink>
                    <FluentNavLink Href="counter" OnClick="OnCloseAsync" Icon="@(new Icons.Regular.Size20.NumberSymbolSquare())" IconColor="Color.Accent">Counter</FluentNavLink>
                    <AuthorizeView>
                    </AuthorizeView>
                    <FluentNavLink Href="permits" OnClick="OnCloseAsync" Icon="@(new Icons.Regular.Size20.Person())" IconColor="Color.Accent">Permits</FluentNavLink>
                </FluentNavMenu>
            </div>
        </div>
    }
}