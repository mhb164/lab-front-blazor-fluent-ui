@using System.ComponentModel.DataAnnotations
@implements IDialogContentComponent

<FluentDialog aria-label="Simple dialog" Modal="true" TrapFocus="false">
    <FluentDialogHeader Visible="false" />

    <FluentLabel Style="margin-bottom: 1rem;" Typo="Typography.H2"
                 Color="@Color.Custom" CustomColor="#00929D"
                 Alignment="HorizontalAlignment.Center">
        Change Local Password
    </FluentLabel>

    <EditForm Model="_content" OnValidSubmit="SubmitChangePasswordAsync">
        <DataAnnotationsValidator />
        <div>
            <FluentTextField @bind-Value="_content.CurrentPassword" Type="password" Required Label="Current Password" Style="width: 100%; margin-bottom: 10px;" />
            <FluentValidationMessage For="@(() => _content.CurrentPassword)" />

        </div>
        <div>
            <FluentTextField @bind-Value="_content.NewPassword" Type="password" Required Label="New Password" Style="width: 100%; margin-bottom: 10px;" />
            <FluentValidationMessage For="@(() => _content.NewPassword)" />
        </div>
        <div>
            <FluentTextField @bind-Value="_content.ConfirmPassword" Type="password" Required Label="Confirm Password" Style="width: 100%; margin-bottom: 10px;" />
            <FluentValidationMessage For="@(() => _content.ConfirmPassword)" />
        </div>

        <FluentStack>
            <FluentButton Type="ButtonType.Submit" Appearance="Appearance.Neutral" Style="width: 50%;" Disabled="@(_isSubmiting)">
                <FluentStack>
                    @if (_isSubmiting)
                    {
                        <FluentLabel>Changing Password...</FluentLabel>
                    }
                    else
                    {
                        <FluentLabel Style="@StyleForSubmit()">Change Password</FluentLabel>
                    }
                </FluentStack>
            </FluentButton>
            <FluentSpacer />
            @if (_forceChangeLocalPassword)
            {
                <FluentButton Style="width: 50%;" Type="ButtonType.Button" Appearance="Appearance.Neutral" @onclick="HandleSignOutAsync">Sign Out</FluentButton>
            }
            else
            {
                <FluentButton Style="width: 50%;" Appearance="Appearance.Neutral" @onclick="OnCloseAsync">Close</FluentButton>
            }
        </FluentStack>

        @if (_isSubmiting)
        {
            <FluentProgress></FluentProgress>
        }

        @if (ErrorMessageHasValue)
        {
            <FluentLabel Color="@Color.Error">@_errorMessage</FluentLabel>
        }
    </EditForm>
</FluentDialog>

